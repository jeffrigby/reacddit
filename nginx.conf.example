# Modern nginx configuration for reacddit (2025 best practices)
# This configuration includes:
# - TLS 1.2/1.3 with modern cipher suites
# - OCSP stapling for certificate validation
# - Comprehensive security headers
# - WebSocket support for Webpack HMR
# - HTTP/2 support

# WebSocket upgrade support for Webpack HMR
map $http_upgrade $connection_upgrade {
    default upgrade;
    '' close;
}

# Client dev server (port 3000)
upstream node {
    server localhost:3000;
    keepalive 64;
}

# API server (port 3001)
upstream nodeBackend {
    server localhost:3001;
    keepalive 64;
}

# Redirect HTTP to HTTPS
server {
    listen         80;
    listen         [::]:80;
    server_name    your-domain.com;
    return         301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    http2 on;

    server_name  your-domain.com;

    # ====================
    # SSL/TLS Configuration (Modern - 2025)
    # ====================

    # Certificate paths (adjust for your setup)
    ssl_certificate /path/to/fullchain.pem;
    ssl_certificate_key /path/to/privkey.pem;
    ssl_trusted_certificate /path/to/chain.pem;  # For OCSP stapling

    # Modern TLS protocols only (TLS 1.2 and 1.3)
    ssl_protocols TLSv1.2 TLSv1.3;

    # Modern cipher suites (Mozilla Intermediate compatibility)
    # TLS 1.3 ciphers (automatically used when available)
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;  # Let client choose for TLS 1.3

    # DH parameters for forward secrecy
    ssl_dhparam /path/to/dhparam.pem;

    # SSL session management
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;  # 10MB cache (~40,000 sessions)
    ssl_session_tickets off;  # Disable for better security

    # OCSP stapling for certificate validation
    ssl_stapling on;
    ssl_stapling_verify on;
    resolver 1.1.1.1 8.8.8.8 valid=300s;  # Cloudflare and Google DNS
    resolver_timeout 5s;

    # ====================
    # Security Headers
    # ====================

    # HSTS (HTTP Strict Transport Security) - 2 years
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    # Prevent clickjacking
    # Note: Using 'DENY' since reacddit needs to embed external iframes, not be embedded itself
    add_header X-Frame-Options "SAMEORIGIN" always;

    # Prevent MIME sniffing
    add_header X-Content-Type-Options "nosniff" always;

    # Content Security Policy (CSP)
    # Note: This is a permissive CSP for reacddit since it loads many external embeds and CDN resources
    # Adjust as needed based on your CDN usage (Bootstrap, Font Awesome, etc.)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://cdn.jsdelivr.net https://cdnjs.cloudflare.com; font-src 'self' data: https://cdnjs.cloudflare.com; img-src 'self' data: https:; connect-src 'self' wss: https:; media-src 'self' https:; frame-src *; object-src 'none'; base-uri 'self'; form-action 'self'; frame-ancestors 'none';" always;

    # Referrer policy
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Permissions policy (formerly Feature-Policy)
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # XSS protection (legacy, but still useful for older browsers)
    add_header X-XSS-Protection "1; mode=block" always;

    # ====================
    # Logging
    # ====================

    error_log /var/log/nginx/reacddit-error.log warn;
    access_log /var/log/nginx/reacddit-access.log;

    # ====================
    # Compression
    # ====================

    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml font/truetype font/opentype application/vnd.ms-fontobject image/svg+xml;

    # ====================
    # API Routes - Proxy to port 3001
    # ====================

    location /api {
        proxy_pass http://nodeBackend;

        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-NginX-Proxy true;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Timeouts for long-running API requests
        proxy_read_timeout 5m;
        proxy_connect_timeout 5m;
        proxy_send_timeout 5m;

        # Disable automatic redirects
        proxy_redirect off;

        # Ensure cookies work properly over HTTPS
        proxy_cookie_path / "/; secure; SameSite=none";

        # Buffer configuration for large API responses
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # Connection keep-alive
        proxy_set_header Connection "";
    }

    # ====================
    # Webpack HMR WebSocket Support
    # ====================

    # Modern Webpack dev server WebSocket endpoint
    location /ws {
        proxy_pass http://node;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket upgrade
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # WebSocket timeout (keep connection open)
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
    }

    # Legacy Webpack dev server WebSocket endpoint (for older Webpack versions)
    location /sockjs-node {
        proxy_pass http://node;
        proxy_http_version 1.1;

        proxy_set_header Host $host;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # WebSocket timeout
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
    }

    # ====================
    # Client Routes - Proxy to port 3000
    # ====================

    location / {
        proxy_pass http://node;

        # Proxy headers
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-NginX-Proxy true;

        # WebSocket support (for any future WebSocket needs)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Timeouts
        proxy_read_timeout 5m;
        proxy_connect_timeout 5m;
        proxy_send_timeout 5m;

        # Disable automatic redirects
        proxy_redirect off;

        # Connection keep-alive
        proxy_set_header Connection "";
    }
}
