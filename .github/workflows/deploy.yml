name: Deploy to AWS

on:
  push:
    branches:
      - master
  workflow_dispatch:  # Allow manual triggers

# CRITICAL: Required for OIDC authentication
permissions:
  id-token: write   # Required for AWS OIDC
  contents: read    # Required for actions/checkout

env:
  AWS_REGION: us-east-1
  NODE_VERSION: '22'
  STACK_NAME: reacddit-prod
  S3_BUCKET: reacddit-prod-reacdditapibucket-1wdgyc8cvk9ai
  CLOUDFRONT_DISTRIBUTION_ID: ER1QO34K3531K

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # ============================================
      # 1. CHECKOUT & SETUP
      # ============================================
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@v2
        with:
          use-installer: true

      # ============================================
      # 2. PRE-DEPLOYMENT VALIDATION
      # ============================================
      - name: Install API dependencies
        working-directory: ./api
        run: npm ci

      - name: Type-check API
        working-directory: ./api
        run: npm run type-check

      - name: Install client dependencies
        working-directory: ./client
        run: npm ci

      - name: Lint client
        working-directory: ./client
        run: npm run lint

      # ============================================
      # 3. AWS AUTHENTICATION (OIDC)
      # ============================================
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v5.1.0
        with:
          role-to-assume: arn:aws:iam::964175769513:role/GitHubActionsDeployRole
          aws-region: ${{ env.AWS_REGION }}
          role-session-name: GitHubActions-${{ github.run_id }}

      - name: Verify AWS Identity
        run: |
          echo "Authenticated as:"
          aws sts get-caller-identity

      # ============================================
      # 4. BUILD & DEPLOY SAM (API + INFRASTRUCTURE)
      # ============================================
      - name: SAM Build
        working-directory: ./api
        run: sam build

      - name: SAM Deploy
        working-directory: ./api
        run: |
          sam deploy \
            --stack-name ${{ env.STACK_NAME }} \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --resolve-s3 \
            --capabilities CAPABILITY_IAM \
            --parameter-overrides \
              Domain=reacdd.it \
              ACMCertificateArn=${{ secrets.ACM_CERTIFICATE_ARN }} \
              ENVSsmParam=/reacddit/.env

      # ============================================
      # 5. BUILD & DEPLOY CLIENT (REACT APP)
      # ============================================
      - name: Fetch client environment variables from SSM
        run: |
          echo "Fetching production environment variables..."
          aws ssm get-parameter \
            --name "/reacddit/client/.env" \
            --with-decryption \
            --query 'Parameter.Value' \
            --output text > ./client/.env
          echo "✓ Environment variables loaded"

      - name: Build React app
        working-directory: ./client
        run: npm run build

      - name: Upload client to S3 (with cache headers)
        working-directory: ./client
        run: |
          # Upload index.html with short cache (60 seconds)
          aws s3 cp dist/index.html s3://${{ env.S3_BUCKET }}/dist/index.html \
            --cache-control "max-age=60, must-revalidate" \
            --content-type "text/html"

          # Upload hashed assets (JS, CSS) with long cache (1 year, immutable)
          aws s3 sync dist/ s3://${{ env.S3_BUCKET }}/dist/ \
            --exclude "index.html" \
            --exclude "*.map" \
            --cache-control "max-age=31536000, immutable" \
            --delete

          # Upload source maps separately (no cache)
          aws s3 sync dist/ s3://${{ env.S3_BUCKET }}/dist/ \
            --exclude "*" \
            --include "*.map" \
            --cache-control "no-cache" \
            --delete

      # ============================================
      # 6. INVALIDATE CACHES
      # ============================================
      - name: Invalidate CloudFront cache
        run: |
          INVALIDATION_ID=$(aws cloudfront create-invalidation \
            --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} \
            --paths "/*" \
            --query 'Invalidation.Id' \
            --output text)

          echo "CloudFront invalidation created: $INVALIDATION_ID"
          echo "INVALIDATION_ID=$INVALIDATION_ID" >> $GITHUB_ENV

      - name: Purge Cloudflare cache
        uses: nathanvaughn/actions-cloudflare-purge@v3.1.0
        with:
          cf_zone: ${{ secrets.CLOUDFLARE_ZONE_ID }}
          cf_auth: ${{ secrets.CLOUDFLARE_TOKEN }}

      # ============================================
      # 7. POST-DEPLOYMENT VERIFICATION
      # ============================================
      - name: Wait for CloudFront invalidation
        run: |
          echo "Waiting for CloudFront invalidation to complete..."
          aws cloudfront wait invalidation-completed \
            --distribution-id ${{ env.CLOUDFRONT_DISTRIBUTION_ID }} \
            --id ${{ env.INVALIDATION_ID }}
          echo "✓ CloudFront invalidation completed"

      - name: Verify deployment
        run: |
          echo "Deployment completed successfully!"
          echo "Site URL: https://reacdd.it"
          echo "CloudFront Distribution: ${{ env.CLOUDFRONT_DISTRIBUTION_ID }}"
          echo "Stack: ${{ env.STACK_NAME }}"
          echo "GitHub Run: ${{ github.run_id }}"

      # ============================================
      # 8. DEPLOYMENT SUMMARY
      # ============================================
      - name: Post deployment summary
        if: always()
        run: |
          echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **Site**: https://reacdd.it" >> $GITHUB_STEP_SUMMARY
          echo "- **Stack**: ${{ env.STACK_NAME }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Region**: ${{ env.AWS_REGION }}" >> $GITHUB_STEP_SUMMARY
          echo "- **CloudFront**: ${{ env.CLOUDFRONT_DISTRIBUTION_ID }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Triggered by**: ${{ github.actor }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Cache Invalidation" >> $GITHUB_STEP_SUMMARY
          echo "- CloudFront: ✓ Completed" >> $GITHUB_STEP_SUMMARY
          echo "- Cloudflare: ✓ Purged" >> $GITHUB_STEP_SUMMARY
